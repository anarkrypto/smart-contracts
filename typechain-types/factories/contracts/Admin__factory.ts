/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Admin, AdminInterface } from "../../contracts/Admin";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "supplierId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "managerAddr",
        type: "address",
      },
    ],
    name: "NewManager",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "NewSupplier",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "supplierId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "managerAddr",
        type: "address",
      },
    ],
    name: "RemovedManager",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "RemovedSupplier",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "addAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "metadataURI",
        type: "string",
      },
      {
        internalType: "address[]",
        name: "managersAddrs",
        type: "address[]",
      },
      {
        internalType: "enum Suppliers.Role",
        name: "role",
        type: "uint8",
      },
    ],
    name: "addSupplier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "supplierId",
        type: "uint256",
      },
    ],
    name: "getManagers",
    outputs: [
      {
        internalType: "address[]",
        name: "_managers",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getSupplier",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "metadataURI",
            type: "string",
          },
          {
            internalType: "address[]",
            name: "managersAddrs",
            type: "address[]",
          },
          {
            internalType: "enum Suppliers.Role",
            name: "role",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
        ],
        internalType: "struct Suppliers.Supplier",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "removeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "supplierId",
        type: "uint256",
      },
    ],
    name: "removeSupplier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "tokenSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040805160208101909152600081526200002c816200004d565b50336000908152600860205260409020805460ff1916600117905562000149565b80516200006290600290602084019062000066565b5050565b82805462000074906200010c565b90600052602060002090601f016020900481019282620000985760008555620000e3565b82601f10620000b357805160ff1916838001178555620000e3565b82800160010185558215620000e3579182015b82811115620000e3578251825591602001919060010190620000c6565b50620000f1929150620000f5565b5090565b5b80821115620000f15760008155600101620000f6565b600181811c908216806200012157607f821691505b602082108114156200014357634e487b7160e01b600052602260045260246000fd5b50919050565b6120d980620001596000396000f3fe608060405234801561001057600080fd5b50600436106100ff5760003560e01c8063a22cb46511610097578063e0620e1d11610066578063e0620e1d14610221578063e3be9da014610241578063e985e9c514610261578063f242432a1461029d57600080fd5b8063a22cb465146101e8578063c87b56dd1461014d578063c9a8d906146101fb578063d5c7f13a1461020e57600080fd5b80632693ebf2116100d35780632693ebf2146101825780632eb2c2d6146101a25780634e1273f4146101b557806370480275146101d557600080fd5b8062fdd58e1461010457806301ffc9a71461012a5780630e89341c1461014d5780631785f53c1461016d575b600080fd5b610117610112366004611a3c565b6102b0565b6040519081526020015b60405180910390f35b61013d610138366004611ac6565b610347565b6040519015158152602001610121565b61016061015b366004611b8c565b610399565b6040516101219190611d58565b61018061017b3660046118ad565b61043b565b005b610117610190366004611b8c565b60009081526003602052604090205490565b6101806101b03660046118f9565b6104e3565b6101c86101c3366004611a65565b61057a565b6040516101219190611d17565b6101806101e33660046118ad565b6106dc565b6101806101f6366004611a02565b61072f565b610180610209366004611afe565b61073e565b61018061021c366004611b8c565b61077d565b61023461022f366004611b8c565b610789565b6040516101219190611e6f565b61025461024f366004611b8c565b610928565b6040516101219190611d04565b61013d61026f3660046118c7565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6101806102ab36600461199f565b6109f8565b60006001600160a01b0383166103215760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061037857506001600160e01b031982166303a24d0760e21b145b8061039357506301ffc9a760e01b6001600160e01b03198316145b92915050565b60008181526004602052604090208054606091906103b690611f3c565b80601f01602080910402602001604051908101604052809291908181526020018280546103e290611f3c565b801561042f5780601f106104045761010080835404028352916020019161042f565b820191906000526020600020905b81548152906001019060200180831161041257829003601f168201915b50505050509050919050565b3360009081526008602052604090205460ff1661046a5760405162461bcd60e51b815260040161031890611db3565b600161047560075490565b116104c25760405162461bcd60e51b815260206004820152601c60248201527f43616e27742068617665206c657373207468616e20312061646d696e000000006044820152606401610318565b6001600160a01b03166000908152600860205260409020805460ff19169055565b6001600160a01b0385163314806104ff57506104ff853361026f565b6105665760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b6064820152608401610318565b6105738585858585610a7f565b5050505050565b606081518351146105df5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608401610318565b6000835167ffffffffffffffff81111561060957634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610632578160200160208202803683370190505b50905060005b84518110156106d45761069985828151811061066457634e487b7160e01b600052603260045260246000fd5b602002602001015185838151811061068c57634e487b7160e01b600052603260045260246000fd5b60200260200101516102b0565b8282815181106106b957634e487b7160e01b600052603260045260246000fd5b60209081029190910101526106cd81611fa4565b9050610638565b509392505050565b3360009081526008602052604090205460ff1661070b5760405162461bcd60e51b815260040161031890611db3565b6001600160a01b03166000908152600860205260409020805460ff19166001179055565b61073a338383610c86565b5050565b3360009081526008602052604090205460ff1661076d5760405162461bcd60e51b815260040161031890611db3565b610778838383610d67565b505050565b61078681610f86565b50565b6107b2604080516080810182526060808252602082015290810160008152600060209091015290565b600082815260066020526040908190208151608081019092528054829082906107da90611f3c565b80601f016020809104026020016040519081016040528092919081815260200182805461080690611f3c565b80156108535780601f1061082857610100808354040283529160200191610853565b820191906000526020600020905b81548152906001019060200180831161083657829003601f168201915b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156108b557602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610897575b5050509183525050600282015460209091019060ff1660038111156108ea57634e487b7160e01b600052602160045260246000fd5b600381111561090957634e487b7160e01b600052602160045260246000fd5b815260029190910154610100900460ff16151560209091015292915050565b6000818152600660205260409020600201546060908290610100900460ff1661098a5760405162461bcd60e51b815260206004820152601460248201527314dd5c1c1b1a595c881b9bdd08185b1b1bddd95960621b6044820152606401610318565b600083815260066020908152604091829020600101805483518184028101840190945280845290918301828280156109eb57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116109cd575b5050505050915050919050565b6001600160a01b038516331480610a145750610a14853361026f565b610a725760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b6064820152608401610318565b6105738585858585611050565b8151835114610ae15760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610318565b6001600160a01b038416610b075760405162461bcd60e51b815260040161031890611de0565b3360005b8451811015610c0a576000858281518110610b3657634e487b7160e01b600052603260045260246000fd5b602002602001015190506000858381518110610b6257634e487b7160e01b600052603260045260246000fd5b602090810291909101810151600084815280835260408082206001600160a01b038e168352909352919091205490915081811015610bb25760405162461bcd60e51b815260040161031890611e25565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610bef908490611f0d565b9250508190555050505080610c0390611fa4565b9050610b0b565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610c5a929190611d2a565b60405180910390a4610c70818787878787611188565b610c7e81878787878761135b565b505050505050565b816001600160a01b0316836001600160a01b03161415610cfa5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608401610318565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b600182511015610db95760405162461bcd60e51b815260206004820152601a60248201527f496e76616c6964207a65726f206d616e616765727341646472730000000000006044820152606401610318565b610dc7600580546001019055565b6040518060800160405280848152602001838152602001826003811115610dfe57634e487b7160e01b600052602160045260246000fd5b8152600160209091015260066000610e1560055490565b8152602080820192909252604001600020825180519192610e3b928492909101906115e9565b506020828101518051610e54926001850192019061166d565b50604082015160028201805460ff19166001836003811115610e8657634e487b7160e01b600052602160045260246000fd5b021790555060609190910151600290910180549115156101000261ff00199092169190911790557ff347aab1231ebd650c0e99cac74ba6b40ac289bdbb1640bce2f052c649e87aa1610ed760055490565b60405190815260200160405180910390a160005b8251811015610f80577f786df766d13289a8b9fdab500dfc6c7999ffe8b572f33ab0675c6d39b815e38a610f1e60055490565b848381518110610f3e57634e487b7160e01b600052603260045260246000fd5b6020026020010151604051610f669291909182526001600160a01b0316602082015260400190565b60405180910390a180610f7881611fa4565b915050610eeb565b50505050565b6000818152600660205260409020600201548190610100900460ff16610fe55760405162461bcd60e51b815260206004820152601460248201527314dd5c1c1b1a595c881b9bdd08185b1b1bddd95960621b6044820152606401610318565b600082815260066020526040812090610ffe82826116c2565b61100c6001830160006116fc565b50600201805461ffff191690556040518281527ff2ac82487a3fafb5cfc6e6927a3304841389eee65d48fd5521cd30af5d9565429060200160405180910390a15050565b6001600160a01b0384166110765760405162461bcd60e51b815260040161031890611de0565b336000611082856114c6565b9050600061108f856114c6565b90506000868152602081815260408083206001600160a01b038c168452909152902054858110156110d25760405162461bcd60e51b815260040161031890611e25565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a1682528120805488929061110f908490611f0d565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461116f848a8a86868a611188565b61117d848a8a8a8a8a61151f565b505050505050505050565b60005b8351811015611352576001600160a01b038616611219578281815181106111c257634e487b7160e01b600052603260045260246000fd5b6020026020010151600360008684815181106111ee57634e487b7160e01b600052603260045260246000fd5b6020026020010151815260200190815260200160002060008282546112139190611f0d565b90915550505b6001600160a01b03851661129e5782818151811061124757634e487b7160e01b600052603260045260246000fd5b60200260200101516003600086848151811061127357634e487b7160e01b600052603260045260246000fd5b6020026020010151815260200190815260200160002060008282546112989190611f25565b90915550505b600360008583815181106112c257634e487b7160e01b600052603260045260246000fd5b60200260200101518152602001908152602001600020546000141561134057604051806020016040528060008152506004600086848151811061131557634e487b7160e01b600052603260045260246000fd5b60200260200101518152602001908152602001600020908051906020019061133e9291906115e9565b505b8061134a81611fa4565b91505061118b565b50505050505050565b6001600160a01b0384163b15610c7e5760405163bc197c8160e01b81526001600160a01b0385169063bc197c819061139f9089908990889088908890600401611c61565b602060405180830381600087803b1580156113b957600080fd5b505af19250505080156113e9575060408051601f3d908101601f191682019092526113e691810190611ae2565b60015b611496576113f5611feb565b806308c379a0141561142f575061140a612003565b806114155750611431565b8060405162461bcd60e51b81526004016103189190611d58565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b6064820152608401610318565b6001600160e01b0319811663bc197c8160e01b146113525760405162461bcd60e51b815260040161031890611d6b565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061150e57634e487b7160e01b600052603260045260246000fd5b602090810291909101015292915050565b6001600160a01b0384163b15610c7e5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906115639089908990889088908890600401611cbf565b602060405180830381600087803b15801561157d57600080fd5b505af19250505080156115ad575060408051601f3d908101601f191682019092526115aa91810190611ae2565b60015b6115b9576113f5611feb565b6001600160e01b0319811663f23a6e6160e01b146113525760405162461bcd60e51b815260040161031890611d6b565b8280546115f590611f3c565b90600052602060002090601f016020900481019282611617576000855561165d565b82601f1061163057805160ff191683800117855561165d565b8280016001018555821561165d579182015b8281111561165d578251825591602001919060010190611642565b50611669929150611716565b5090565b82805482825590600052602060002090810192821561165d579160200282015b8281111561165d57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061168d565b5080546116ce90611f3c565b6000825580601f106116de575050565b601f0160209004906000526020600020908101906107869190611716565b508054600082559060005260206000209081019061078691905b5b808211156116695760008155600101611717565b600067ffffffffffffffff83111561174557611745611fd5565b60405161175c601f8501601f191660200182611f77565b80915083815284848401111561177157600080fd5b83836020830137600060208583010152509392505050565b80356001600160a01b03811681146117a057600080fd5b919050565b600082601f8301126117b5578081fd5b813560206117c282611ee9565b6040516117cf8282611f77565b8381528281019150858301600585901b870184018810156117ee578586fd5b855b858110156118135761180182611789565b845292840192908401906001016117f0565b5090979650505050505050565b600082601f830112611830578081fd5b8135602061183d82611ee9565b60405161184a8282611f77565b8381528281019150858301600585901b87018401881015611869578586fd5b855b858110156118135781358452928401929084019060010161186b565b600082601f830112611897578081fd5b6118a68383356020850161172b565b9392505050565b6000602082840312156118be578081fd5b6118a682611789565b600080604083850312156118d9578081fd5b6118e283611789565b91506118f060208401611789565b90509250929050565b600080600080600060a08688031215611910578081fd5b61191986611789565b945061192760208701611789565b9350604086013567ffffffffffffffff80821115611943578283fd5b61194f89838a01611820565b94506060880135915080821115611964578283fd5b61197089838a01611820565b93506080880135915080821115611985578283fd5b5061199288828901611887565b9150509295509295909350565b600080600080600060a086880312156119b6578081fd5b6119bf86611789565b94506119cd60208701611789565b93506040860135925060608601359150608086013567ffffffffffffffff8111156119f6578182fd5b61199288828901611887565b60008060408385031215611a14578182fd5b611a1d83611789565b915060208301358015158114611a31578182fd5b809150509250929050565b60008060408385031215611a4e578182fd5b611a5783611789565b946020939093013593505050565b60008060408385031215611a77578182fd5b823567ffffffffffffffff80821115611a8e578384fd5b611a9a868387016117a5565b93506020850135915080821115611aaf578283fd5b50611abc85828601611820565b9150509250929050565b600060208284031215611ad7578081fd5b81356118a68161208d565b600060208284031215611af3578081fd5b81516118a68161208d565b600080600060608486031215611b12578081fd5b833567ffffffffffffffff80821115611b29578283fd5b818601915086601f830112611b3c578283fd5b611b4b8783356020850161172b565b94506020860135915080821115611b60578283fd5b50611b6d868287016117a5565b925050604084013560048110611b81578182fd5b809150509250925092565b600060208284031215611b9d578081fd5b5035919050565b6000815180845260208085019450808401835b83811015611bdc5781516001600160a01b031687529582019590820190600101611bb7565b509495945050505050565b6000815180845260208085019450808401835b83811015611bdc57815187529582019590820190600101611bfa565b60008151808452815b81811015611c3b57602081850181015186830182015201611c1f565b81811115611c4c5782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0386811682528516602082015260a060408201819052600090611c8d90830186611be7565b8281036060840152611c9f8186611be7565b90508281036080840152611cb38185611c16565b98975050505050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090611cf990830184611c16565b979650505050505050565b6020815260006118a66020830184611ba4565b6020815260006118a66020830184611be7565b604081526000611d3d6040830185611be7565b8281036020840152611d4f8185611be7565b95945050505050565b6020815260006118a66020830184611c16565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b60208082526013908201527227379030b236b4b7103832b936b4b9b9b4b7b760691b604082015260600190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b602081526000825160806020840152611e8b60a0840182611c16565b90506020840151601f19848303016040850152611ea88282611ba4565b915050604084015160048110611ecc57634e487b7160e01b83526021600452602483fd5b806060850152506060840151151560808401528091505092915050565b600067ffffffffffffffff821115611f0357611f03611fd5565b5060051b60200190565b60008219821115611f2057611f20611fbf565b500190565b600082821015611f3757611f37611fbf565b500390565b600181811c90821680611f5057607f821691505b60208210811415611f7157634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f1916810167ffffffffffffffff81118282101715611f9d57611f9d611fd5565b6040525050565b6000600019821415611fb857611fb8611fbf565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d111561200057600481823e5160e01c5b90565b600060443d10156120115790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561204157505050505090565b82850191508151818111156120595750505050505090565b843d87010160208285010111156120735750505050505090565b61208260208286010187611f77565b509095945050505050565b6001600160e01b03198116811461078657600080fdfea264697066735822122090a725ab59431bfd77d49ecf2a5b0e3d107ed4fdfe0aed2c08f50a0dd5cc65da64736f6c63430008040033";

type AdminConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AdminConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Admin__factory extends ContractFactory {
  constructor(...args: AdminConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Admin> {
    return super.deploy(overrides || {}) as Promise<Admin>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Admin {
    return super.attach(address) as Admin;
  }
  override connect(signer: Signer): Admin__factory {
    return super.connect(signer) as Admin__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AdminInterface {
    return new utils.Interface(_abi) as AdminInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Admin {
    return new Contract(address, _abi, signerOrProvider) as Admin;
  }
}
