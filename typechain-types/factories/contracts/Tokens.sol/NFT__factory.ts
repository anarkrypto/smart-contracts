/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { NFT, NFTInterface } from "../../../contracts/Tokens.sol/NFT";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "tokenSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040805160208101909152600081526200002c8162000033565b506200012f565b8051620000489060029060208401906200004c565b5050565b8280546200005a90620000f2565b90600052602060002090601f0160209004810192826200007e5760008555620000c9565b82601f106200009957805160ff1916838001178555620000c9565b82800160010185558215620000c9579182015b82811115620000c9578251825591602001919060010190620000ac565b50620000d7929150620000db565b5090565b5b80821115620000d75760008155600101620000dc565b600181811c908216806200010757607f821691505b602082108114156200012957634e487b7160e01b600052602260045260246000fd5b50919050565b6116fb806200013f6000396000f3fe608060405234801561001057600080fd5b506004361061009d5760003560e01c80634e1273f4116100665780634e1273f414610140578063a22cb46514610160578063c87b56dd146100eb578063e985e9c514610173578063f242432a146101af57600080fd5b8062fdd58e146100a257806301ffc9a7146100c85780630e89341c146100eb5780632693ebf21461010b5780632eb2c2d61461012b575b600080fd5b6100b56100b036600461116a565b6101c2565b6040519081526020015b60405180910390f35b6100db6100d636600461125e565b610259565b60405190151581526020016100bf565b6100fe6100f936600461129d565b6102ab565b6040516100bf919061141e565b6100b561011936600461129d565b60009081526003602052604090205490565b61013e610139366004611027565b61034d565b005b61015361014e366004611193565b6103e4565b6040516100bf91906113dd565b61013e61016e366004611130565b610546565b6100db610181366004610ff5565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b61013e6101bd3660046110cd565b610555565b60006001600160a01b0383166102335760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061028a57506001600160e01b031982166303a24d0760e21b145b806102a557506301ffc9a760e01b6001600160e01b03198316145b92915050565b60008181526004602052604090208054606091906102c89061155b565b80601f01602080910402602001604051908101604052809291908181526020018280546102f49061155b565b80156103415780601f1061031657610100808354040283529160200191610341565b820191906000526020600020905b81548152906001019060200180831161032457829003601f168201915b50505050509050919050565b6001600160a01b03851633148061036957506103698533610181565b6103d05760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b606482015260840161022a565b6103dd85858585856105dc565b5050505050565b606081518351146104495760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b606482015260840161022a565b6000835167ffffffffffffffff81111561047357634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561049c578160200160208202803683370190505b50905060005b845181101561053e576105038582815181106104ce57634e487b7160e01b600052603260045260246000fd5b60200260200101518583815181106104f657634e487b7160e01b600052603260045260246000fd5b60200260200101516101c2565b82828151811061052357634e487b7160e01b600052603260045260246000fd5b6020908102919091010152610537816115c3565b90506104a2565b509392505050565b6105513383836107e3565b5050565b6001600160a01b03851633148061057157506105718533610181565b6105cf5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b606482015260840161022a565b6103dd85858585856108c4565b815183511461063e5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b606482015260840161022a565b6001600160a01b0384166106645760405162461bcd60e51b815260040161022a90611479565b3360005b845181101561076757600085828151811061069357634e487b7160e01b600052603260045260246000fd5b6020026020010151905060008583815181106106bf57634e487b7160e01b600052603260045260246000fd5b602090810291909101810151600084815280835260408082206001600160a01b038e16835290935291909120549091508181101561070f5760405162461bcd60e51b815260040161022a906114be565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b1682528120805484929061074c90849061152c565b9250508190555050505080610760906115c3565b9050610668565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516107b79291906113f0565b60405180910390a46107cd8187878787876109fc565b6107db818787878787610bcf565b505050505050565b816001600160a01b0316836001600160a01b031614156108575760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b606482015260840161022a565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166108ea5760405162461bcd60e51b815260040161022a90611479565b3360006108f685610d3a565b9050600061090385610d3a565b90506000868152602081815260408083206001600160a01b038c168452909152902054858110156109465760405162461bcd60e51b815260040161022a906114be565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a1682528120805488929061098390849061152c565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46109e3848a8a86868a6109fc565b6109f1848a8a8a8a8a610d93565b505050505050505050565b60005b8351811015610bc6576001600160a01b038616610a8d57828181518110610a3657634e487b7160e01b600052603260045260246000fd5b602002602001015160036000868481518110610a6257634e487b7160e01b600052603260045260246000fd5b602002602001015181526020019081526020016000206000828254610a87919061152c565b90915550505b6001600160a01b038516610b1257828181518110610abb57634e487b7160e01b600052603260045260246000fd5b602002602001015160036000868481518110610ae757634e487b7160e01b600052603260045260246000fd5b602002602001015181526020019081526020016000206000828254610b0c9190611544565b90915550505b60036000858381518110610b3657634e487b7160e01b600052603260045260246000fd5b602002602001015181526020019081526020016000205460001415610bb4576040518060200160405280600081525060046000868481518110610b8957634e487b7160e01b600052603260045260246000fd5b602002602001015181526020019081526020016000209080519060200190610bb2929190610e5d565b505b80610bbe816115c3565b9150506109ff565b50505050505050565b6001600160a01b0384163b156107db5760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610c13908990899088908890889060040161133a565b602060405180830381600087803b158015610c2d57600080fd5b505af1925050508015610c5d575060408051601f3d908101601f19168201909252610c5a91810190611281565b60015b610d0a57610c6961160a565b806308c379a01415610ca35750610c7e611622565b80610c895750610ca5565b8060405162461bcd60e51b815260040161022a919061141e565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b606482015260840161022a565b6001600160e01b0319811663bc197c8160e01b14610bc65760405162461bcd60e51b815260040161022a90611431565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610d8257634e487b7160e01b600052603260045260246000fd5b602090810291909101015292915050565b6001600160a01b0384163b156107db5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610dd79089908990889088908890600401611398565b602060405180830381600087803b158015610df157600080fd5b505af1925050508015610e21575060408051601f3d908101601f19168201909252610e1e91810190611281565b60015b610e2d57610c6961160a565b6001600160e01b0319811663f23a6e6160e01b14610bc65760405162461bcd60e51b815260040161022a90611431565b828054610e699061155b565b90600052602060002090601f016020900481019282610e8b5760008555610ed1565b82601f10610ea457805160ff1916838001178555610ed1565b82800160010185558215610ed1579182015b82811115610ed1578251825591602001919060010190610eb6565b50610edd929150610ee1565b5090565b5b80821115610edd5760008155600101610ee2565b80356001600160a01b0381168114610f0d57600080fd5b919050565b600082601f830112610f22578081fd5b81356020610f2f82611508565b604051610f3c8282611596565b8381528281019150858301600585901b87018401881015610f5b578586fd5b855b85811015610f7957813584529284019290840190600101610f5d565b5090979650505050505050565b600082601f830112610f96578081fd5b813567ffffffffffffffff811115610fb057610fb06115f4565b604051610fc7601f8301601f191660200182611596565b818152846020838601011115610fdb578283fd5b816020850160208301379081016020019190915292915050565b60008060408385031215611007578182fd5b61101083610ef6565b915061101e60208401610ef6565b90509250929050565b600080600080600060a0868803121561103e578081fd5b61104786610ef6565b945061105560208701610ef6565b9350604086013567ffffffffffffffff80821115611071578283fd5b61107d89838a01610f12565b94506060880135915080821115611092578283fd5b61109e89838a01610f12565b935060808801359150808211156110b3578283fd5b506110c088828901610f86565b9150509295509295909350565b600080600080600060a086880312156110e4578081fd5b6110ed86610ef6565b94506110fb60208701610ef6565b93506040860135925060608601359150608086013567ffffffffffffffff811115611124578182fd5b6110c088828901610f86565b60008060408385031215611142578182fd5b61114b83610ef6565b91506020830135801515811461115f578182fd5b809150509250929050565b6000806040838503121561117c578182fd5b61118583610ef6565b946020939093013593505050565b600080604083850312156111a5578182fd5b823567ffffffffffffffff808211156111bc578384fd5b818501915085601f8301126111cf578384fd5b813560206111dc82611508565b6040516111e98282611596565b8381528281019150858301600585901b870184018b1015611208578889fd5b8896505b848710156112315761121d81610ef6565b83526001969096019591830191830161120c565b5096505086013592505080821115611247578283fd5b5061125485828601610f12565b9150509250929050565b60006020828403121561126f578081fd5b813561127a816116ac565b9392505050565b600060208284031215611292578081fd5b815161127a816116ac565b6000602082840312156112ae578081fd5b5035919050565b6000815180845260208085019450808401835b838110156112e4578151875295820195908201906001016112c8565b509495945050505050565b60008151808452815b81811015611314576020818501810151868301820152016112f8565b818111156113255782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0386811682528516602082015260a060408201819052600090611366908301866112b5565b828103606084015261137881866112b5565b9050828103608084015261138c81856112ef565b98975050505050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906113d2908301846112ef565b979650505050505050565b60208152600061127a60208301846112b5565b60408152600061140360408301856112b5565b828103602084015261141581856112b5565b95945050505050565b60208152600061127a60208301846112ef565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b600067ffffffffffffffff821115611522576115226115f4565b5060051b60200190565b6000821982111561153f5761153f6115de565b500190565b600082821015611556576115566115de565b500390565b600181811c9082168061156f57607f821691505b6020821081141561159057634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f1916810167ffffffffffffffff811182821017156115bc576115bc6115f4565b6040525050565b60006000198214156115d7576115d76115de565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d111561161f57600481823e5160e01c5b90565b600060443d10156116305790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561166057505050505090565b82850191508151818111156116785750505050505090565b843d87010160208285010111156116925750505050505090565b6116a160208286010187611596565b509095945050505050565b6001600160e01b0319811681146116c257600080fd5b5056fea26469706673582212202545e01d50cef49a73e44011750f6574f6d5e10391f7b5fe6f3b30e2be31685964736f6c63430008040033";

type NFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFT__factory extends ContractFactory {
  constructor(...args: NFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NFT> {
    return super.deploy(overrides || {}) as Promise<NFT>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NFT {
    return super.attach(address) as NFT;
  }
  override connect(signer: Signer): NFT__factory {
    return super.connect(signer) as NFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTInterface {
    return new utils.Interface(_abi) as NFTInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): NFT {
    return new Contract(address, _abi, signerOrProvider) as NFT;
  }
}
